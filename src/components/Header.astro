---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
  <nav>
    <h2><a href="/">{SITE_TITLE}</a></h2>
    <div class="internal-links">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/projects">Projects</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
    </div>
    <div class="social-links">
      <a href="https://github.com/pointlessbish" target="_blank">
        <span class="sr-only">Go to pb's GitHub</span>
        <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
          <path
            fill="currentColor"
            d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
          ></path>
        </svg>
      </a>
      <button id="theme-toggle" aria-label="Toggle dark/light mode">
        <svg viewBox="0 0 24 24" width="32" height="32" aria-hidden="true">
          <path
            fill="currentColor"
            d="M12 3v1.38a5.52 5.52 0 0 0-4.6 4.6H6a5.978 5.978 0 0 1 6-6zM12 5a7 7 0 0 1 0 14c-3.5 0-6.43-2.63-6.92-6h1.52A5.48 5.48 0 0 0 12 17a5.5 5.5 0 0 0 5.5-5.5V6.5A5.5 5.5 0 0 0 12 5z"
          ></path>
        </svg>
      </button>
    </div>
  </nav>
</header>

<style>
  /* Base styles */
  body {
    transition:
      background-color 0.3s,
      color 0.3s;
  }

  /* Light mode */
  body.light-mode {
    background-color: #ffffff;
    color: #000000;
  }

  /* Dark mode */
  body.dark-mode {
    background-color: #000000;
    color: #ffffff;
  }

  /* Automatically apply user preference */
  @media (prefers-color-scheme: dark) {
    body {
      background-color: #000000;
      color: #ffffff;
    }
  }

  @media (prefers-color-scheme: light) {
    body {
      background-color: #ffffff;
      color: #000000;
    }
  }

  /* Header styles */
  header {
    margin: 0;
    padding: 0;
    background: transparent; /* Make the background transparent */
    box-shadow: 0 2px 8px rgba(var(--black), 0.2); /* Adjust shadow if needed for visibility */
    position: fixed; /* Make the header sticky */
    width: 100%;
    top: 0; /* Stick to the top */
    z-index: 9999; /* Ensure it stays above all other elements */
  }

  h2 {
    margin: 0;
    font-size: 1em;
  }

  h2 a,
  h2 a.active {
    text-decoration: none;
    color: var(--text-color); /* Ensure link text is visible */
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  nav a {
    padding: 1em 0.5em;
    color: var(
      --gray-light
    ); /* Ensure the text is visible against the transparent background */
    border-bottom: 4px solid transparent;
    text-decoration: none;
  }

  nav a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }

  .social-links,
  .social-links a {
    display: flex;
  }

  @media (max-width: 720px) {
    .social-links {
      display: none;
    }
  }

  #theme-toggle.light-mode {
    color: black;
    background: none;
    border: none;
    cursor: pointer;
  }

  #theme-toggle.dark-mode {
    color: #ffffff;
    background: none;
    border: none;
    cursor: pointer;
  }

  #theme-toggle {
    color: #ffffff;
    background: none;
    border: none;
    cursor: pointer;
  }

  #theme-toggle svg {
    fill: var(--gray-light);
    transition: fill 0.3s;
  }

  #theme-toggle.dark-mode svg {
    fill: #ffffff;
    transition: fill 0.3s;
  }

  body.light-mode #theme-toggle svg {
    fill: rgb(0, 0, 0);
  }

  /* Star Container Styles */
  .star-container {
    position: fixed; /* Ensure it stays in place */
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none; /* Ensure it does not interfere with other elements */
    z-index: -1; /* Ensure stars are behind all content */
    overflow: hidden; /* Prevent stars from overflowing */
  }

  /* Star Styles */
  .star {
    position: absolute;
    background: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.8) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    border-radius: 50%;
  }
</style>

<script type="text/javascript">
  document.addEventListener("DOMContentLoaded", () => {
    // Create the star container
    const starContainer = document.createElement("div");
    starContainer.className = "star-container";
    document.body.appendChild(starContainer);

    const numStars = 150; // Adjust the number of stars

    // Generate and position stars
    for (let i = 0; i < numStars; i++) {
      const star = document.createElement("div");
      star.className = "star";
      const size = Math.random() * 2 + 1; // Random size between 1 and 3 pixels
      const x = Math.random() * window.innerWidth;
      const y = Math.random() * window.innerHeight;

      star.style.width = `${size}px`;
      star.style.height = `${size}px`;
      star.style.left = `${x}px`;
      star.style.top = `${y}px`;

      starContainer.appendChild(star);
    }

    const toggleButton = document.getElementById("theme-toggle");

    // Check for saved user preference or default to system preference
    const savedMode = localStorage.getItem("theme");
    if (savedMode) {
      document.body.classList.add(savedMode);
    } else {
      // Detect system preference if no saved mode
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)",
      ).matches;
      document.body.classList.add(prefersDark ? "dark-mode" : "light-mode");
    }

    toggleButton.addEventListener("click", () => {
      if (document.body.classList.contains("dark-mode")) {
        document.body.classList.remove("dark-mode");
        document.body.classList.add("light-mode");
        localStorage.setItem("theme", "light-mode");
      } else {
        document.body.classList.remove("light-mode");
        document.body.classList.add("dark-mode");
        localStorage.setItem("theme", "dark-mode");
      }
    });
  });
</script>
